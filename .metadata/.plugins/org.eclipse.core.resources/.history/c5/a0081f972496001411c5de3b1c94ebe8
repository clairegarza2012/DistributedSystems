package edu.neumont.csc380;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;

import com.hallaLib.HallaStor;

public class Client {

	/* The client will use the server to store and retrieve instances of the following simple POJOs 
	 * (associated with keys of type String):
	 * 
	 */

	public static void main(String[] args){

		try {
			new Client();

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public Client() throws IOException{

		Socket clientSocket = new Socket("localhost", 2222);

		System.out.println("Client Socket Created!");

		InputStream is = clientSocket.getInputStream();
		BufferedReader buffReader = new BufferedReader(new InputStreamReader(is));

		OutputStream os = clientSocket.getOutputStream();
		PrintWriter pw = new PrintWriter(os, true);

		HallaStor store = HallaStor.getInstance();

		Protocol protocol = new Protocol();

		while (true){
			while (buffReader.ready()){
				String line = buffReader.readLine();

				System.out.println("Message Recieved!\n" + line);
				char objProposition = line.charAt(0);

				String object = line.substring(1);

				if (objProposition == 'r'){
					RaceCar car = protocol.deprotocolRacecar(object);
					store.add("" + car.getId(), car);
				}else if (objProposition == 'd'){
					System.out.println("In driver if statment!");
					Driver driver = protocol.deprotocolDriver(object);
					System.out.println("Just parse back into driver");
					store.add("" + driver.getId(), driver);
					System.out.println("Added driver to store");
				}f
				
				pw.println(line);
			}
		}

		//clientSocket.close();

	}
}

