package edu.neumont.csc230;

import edu.neumont.csc230.Enums.States;

public class StateMachine {

	public States containsHiNotSubstring(String s){
		
		s = s.toUpperCase();
		
		States state = States.Initial;
		
		for (char c : s.toCharArray()){
			
			state = nextState(state, c);
		}
		
		return state;
	}

	private States nextState(States state, char c) {

		States newState = state;
		
		switch (state){
			case Initial:
				newState = (c == 'H') ? States.B : States.C;
				break;
			case B:
				newState = (c == 'I') ? States.Approved1 : States.C;
				break;
			case C:
				newState = (c == ' ') ? States.D : States.C;
				break;
			case D:
				newState = (c == 'H') ? States.B : States.C;
				break;
			case Approved1:
				newState = (c == ' ' || isPunctuation(c)) ? States.Approved2: States.C;
				break;
			case Approved2:
				newState = States.Approved2;
		}
		
		return newState;
	}
	
	private boolean isPunctuation(char c){
		
		return (c == '!') | (c == '.') | (c == '?');
	}
}
