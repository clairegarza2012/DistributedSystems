package edu.enumont.csc230;

import edu.enumont.csc230.Enums.States;


public class StateMachine {

public States containsHiNotSubstring(String s){
		
		s = s.toUpperCase();
		
		States state = States.Initial;
		
		for (char c : s.toCharArray()){
			
			state = nextState(state, c);
		}
		
		return state;
	}

	private States nextState(States state, char c) {

		States newState = state;
		
		switch (state){
			case Initial:
				if (c == 'H'){
					newState = States.A;
				}else if (c == 'A'){
					newState = States.B;
				}
				else {
					newState = States.C;
				}
				break;
			case A:
				if (c == 'O'){
					newState = States.D;
				}else if (c == 'E'){
					newState = States.E;
				}else if (c == 'I'){
					newState = States.F;
				}else {
					newState = States.C;
				}
				break;
			case B:
				newState = (c == 'L')? States.H : States.C;
				newState = (c == ' ')? States.H : States.C;
				break;
			case C:
				newState = (c == ' ')? States.L : States.C;
				break;
		}
		
		return newState;
	}
	
	private boolean isPunctuation(char c){
		
		return (c == '!') | (c == '.') | (c == '?');
	}
}
