package edu.neumont.csc380;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;

public class Client {

	/* The client will use the server to store and retrieve instances of the following simple POJOs 
	 * (associated with keys of type String):
	 * 
	 */
	//private static Scanner scan = new Scanner(System.in);

	private ArrayList<String> ids = new ArrayList<String>();
	private boolean serverFull = false;

	private BufferedReader buffReader;
	
	public static void main(String[] args){

		try {
			new Client();

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public Client() throws IOException{

		Socket clientSocket = new Socket("localhost", 2222);

		System.out.println("Client Socket Created!");

		InputStream is = clientSocket.getInputStream();
		buffReader = new BufferedReader(new InputStreamReader(is));

		OutputStream os = clientSocket.getOutputStream();
		PrintStream ps = new PrintStream(os, true);

		MyThread thread = new MyThread();
		thread.start();

		while(!serverFull){

			// send objects to server
			final String obj = ObjectGenerator.generate();

			System.out.println("Object Created!");

			ps.println("c" + obj);

			System.out.println("Object Pushed to server: type:" + obj.charAt(0) + " id:" + Integer.parseInt(obj.substring(1, 17), 2) );

			//while (true){
			// update objects
			System.out.println("Number Of Id's: " + ids.size());
			//}

			clientSocket.close();

		}
	}

	private class MyThread extends Thread {

		public void run () {

			try {
				while(buffReader.readLine() != null){

					String line = buffReader.readLine();
					System.out.println("Message from Server: \n" + line);

					if (line.equals("Server Is Full!")){
						serverFull = true;
						break;
					}
					if (line.equals("sucessful!")){
						ids.add("some string");
					}
				}
			} catch (IOException e) {
				e.printStackTrace();
			} 
		}
	}

}

